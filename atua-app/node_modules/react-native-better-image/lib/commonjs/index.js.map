{"version":3,"sources":["index.tsx"],"names":["Value","createAnimatedComponent","timing","Animated","AnimatedImage","Image","AnimatedImageBackground","ImageBackground","BetterImage","viewStyle","thumbnailFadeDuration","imageFadeDuration","thumbnailSource","source","onLoadEnd","resizeMethod","resizeMode","thumbnailBlurRadius","style","fallbackSource","uri","onError","children","otherProps","imageOpacity","current","thumbnailOpacity","thumbnailAnimationProgress","hasError","setHasError","hasLoaded","setHasLoaded","onImageLoad","toValue","duration","useNativeDriver","start","stop","onThumbnailLoad","progress","onImageLoadError","event","setValue","ImageComponent","styles","imageContainerStyle","thumbnailImageStyle","opacity","imageStyle","StyleSheet","create","overflow","absoluteFillObject"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useState, ReactNode } from 'react';\nimport {\n  View,\n  Image,\n  ImageBackground,\n  Animated,\n  StyleSheet,\n  ImageProps,\n  ViewStyle,\n  StyleProp,\n  ImageSourcePropType,\n  NativeSyntheticEvent,\n  ImageErrorEventData,\n} from 'react-native';\nimport { useDeepCompareEffectNoCheck } from 'use-deep-compare-effect';\n\nexport interface BetterImageProps extends ImageProps {\n  viewStyle?: StyleProp<ViewStyle>;\n  thumbnailFadeDuration?: number;\n  imageFadeDuration?: number;\n  thumbnailSource?: ImageSourcePropType;\n  thumbnailBlurRadius?: number;\n  fallbackSource?: ImageSourcePropType;\n  children?: ReactNode;\n}\n\nconst { Value, createAnimatedComponent, timing } = Animated;\n\nconst AnimatedImage = createAnimatedComponent(Image);\nconst AnimatedImageBackground = createAnimatedComponent(ImageBackground);\n\nconst BetterImage = ({\n  viewStyle,\n  thumbnailFadeDuration = 250,\n  imageFadeDuration = 250,\n  thumbnailSource,\n  source,\n  onLoadEnd,\n  resizeMethod,\n  resizeMode,\n  thumbnailBlurRadius = 1,\n  style,\n  fallbackSource = { uri: '' },\n  onError,\n  children,\n  ...otherProps\n}: BetterImageProps) => {\n  const imageOpacity = useRef(new Value(0)).current;\n  const thumbnailOpacity = useRef(new Value(0)).current;\n  const thumbnailAnimationProgress = useRef<\n    Animated.CompositeAnimation | undefined\n  >();\n  const [hasError, setHasError] = useState(false);\n  const [hasLoaded, setHasLoaded] = useState(false);\n\n  const onImageLoad = () => {\n    setHasLoaded(true);\n\n    timing(imageOpacity, {\n      toValue: 1,\n      duration: imageFadeDuration,\n      useNativeDriver: true,\n    }).start(() => {\n      thumbnailAnimationProgress.current?.stop();\n      timing(thumbnailOpacity, {\n        toValue: 0,\n        duration: thumbnailFadeDuration,\n        useNativeDriver: true,\n      }).start();\n    });\n\n    onLoadEnd && onLoadEnd();\n  };\n\n  const onThumbnailLoad = () => {\n    if (!hasLoaded) {\n      const progress = timing(thumbnailOpacity, {\n        toValue: 1,\n        duration: thumbnailFadeDuration,\n        useNativeDriver: true,\n      });\n      thumbnailAnimationProgress.current = progress;\n      thumbnailAnimationProgress.current.start();\n    }\n  };\n\n  const onImageLoadError = (\n    event: NativeSyntheticEvent<ImageErrorEventData>\n  ) => {\n    setHasError(true);\n    onError && onError(event);\n  };\n\n  useDeepCompareEffectNoCheck(\n    useCallback(() => {\n      imageOpacity.setValue(0);\n      thumbnailOpacity.setValue(0);\n      setHasError(false);\n      setHasLoaded(false);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []),\n    [source, thumbnailSource]\n  );\n\n  const ImageComponent = children ? AnimatedImageBackground : AnimatedImage;\n\n  return (\n    <View style={[styles.imageContainerStyle, viewStyle]}>\n      {thumbnailSource ? (\n        <ImageComponent\n          children={children}\n          onLoadEnd={onThumbnailLoad}\n          style={[\n            styles.thumbnailImageStyle,\n            { opacity: thumbnailOpacity },\n            style,\n          ]}\n          source={thumbnailSource}\n          blurRadius={thumbnailBlurRadius}\n          resizeMethod={resizeMethod}\n          resizeMode={resizeMode}\n        />\n      ) : null}\n      <ImageComponent\n        children={children}\n        resizeMethod={resizeMethod}\n        resizeMode={resizeMode}\n        onLoadEnd={onImageLoad}\n        onError={hasError ? () => null : onImageLoadError}\n        source={hasError ? fallbackSource : source}\n        style={[styles.imageStyle, { opacity: imageOpacity }, style]}\n        {...otherProps}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  imageContainerStyle: {\n    overflow: 'hidden',\n  },\n  thumbnailImageStyle: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  imageStyle: {\n    ...StyleSheet.absoluteFillObject,\n  },\n});\n\nexport default BetterImage;\n"]}