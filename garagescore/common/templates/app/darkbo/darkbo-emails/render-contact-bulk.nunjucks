{% extends "../common/layouts/darkbo.nunjucks" %}
{% block page %} {% raw %}
<div id="page">
  <h3 class="text-center">Prévisualisation des contacts de campagnes par paquet</h3><br>
  <div class="container">
    <div class="block card">
      <div class="row">
          <div class="form-group col-xs-8">
            <label class="col-xs-3 label-title">Garage</label>
            <div class="col-xs-9">
              <select class="form-control" v-model="data.garageId">
                <option v-for="garage in garages" :value="garage.value">{{ garage.name }}</option>
              </select>
            </div>
          </div>
          <div class="form-group col-xs-4" v-if="contents">
            <label class="col-xs-3 label-title">Montrer</label>
            <div class="col-xs-9">
              <select class="form-control" v-model="contactType">
                  <option value="all">Tous les contacts</option>
                  <option value="sms">Seulement les sms</option>
                  <option value="thanks">Seulement les remerciements</option>
                  <option value="email_1">Seulement les premiers emails de contacts</option>
                  <option value="email_2">Seulement les premièrs emails de relances</option>
                  <option value="email_3">Seulement les seconds emails de relances</option>
                  <option value="followup">Seulement les followups</option>
                  <option value="recontact">Seulement les recontacts</option>
                  <option value="maintenance">Seulement les APV</option>
                  <option value="sale">Seulement les ventes</option>
                  <option value="inspection">Seulement les CT</option>
              </select>
            </div>
          </div>
      </div>
      <hr style="margin: 0 0 10px 0">
      <div class="row col-xs-12">
          <div class="col-xs-4">
              <button class="btn btn-success pull-right" @click="generatePreviews">Afficher les contacts de scénario du garage</button>
          </div>
          <div class="col-xs-8">
              <input class="form-control pull-right" type="text" style="width: 300px; display: inline-block;" v-model="data.email"/>
              <button class="btn btn-warning pull-right" @click="sendPreviews">Envoyer tous les contacts à l'adresse email suivante: </button>
          </div>
      </div>
    </div>
    <div v-show="contents">
      <div id="contents" class="contents">
          <div v-for="content in contents" class="content" v-show="shouldDisplayContact(content.contactKey)">
            <span v-show="shouldDisplayContact(content.contactKey)" class="contactKey">{{content.contactName}}</span>
            <div v-show="shouldDisplayContact(content.contactKey)">
              <span class="subject"> {{ content.subject }} </span>
              </div>
            <iframe v-show="shouldDisplayContact(content.contactKey)" :id="content.contactKey"></iframe>
          </div>
    </div>
  </div>
  <div v-if="!contents">
    {{status}}
  </div>
</div>
{% endraw %}{% endblock %}
{% block scripts %}
  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  <script>
  let garages = {{ garages|safe }};

  new Vue({
    el: '#page',
    data() {
      return {
        status: '',
        rendering: false,
        garages: garages,
        contents: null,
        contactType: null,
        data: {
          garageId: garages ? garages[0].value : null,
          email: '@custeed.com'
        }
      };
    },
    methods: {
      shouldDisplayContact(contactKey) {
        return (!this.contactType || this.contactType === 'all') ? true : contactKey.indexOf(this.contactType) >= 0;
      },
      updateIframe(id) {
        const elem = document.getElementById(id);
        if (!elem) {
          console.error('No iframe for ' + id);
          return;
        }
        const content = this.contents.find(c => c.contactKey === id);
        const doc = elem.contentWindow.document;
        doc.open(); doc.write(content.body || content.htmlBody); doc.close();
        elem.style.width = '100%';
        elem.style.height = '0px';
        setTimeout(function(){
          elem.style.height = doc.body.scrollHeight + 'px';
        }, 50);
      },
      async generatePreviews() {
        try {
          this.contents = null;
          this.contactType = null;
          this.status = 'Loading...';
          let res = await axios.post('{{ lib.client.url.getShortUrl('ADMIN_CONTACT_PREVIEW_BULK_FETCH') }}', this.data);
          this.status = '';
          const data = JSON.parse(res.data);
          this.contents = Object.values(data);
          this.contents = this.contents.sort((c1, c2) => c1.contactName.localeCompare(c2.contactName));
          setTimeout(() => {
            this.contents.forEach(k => { this.updateIframe(k.contactKey); });
          }, 1000);
        } catch (e) { alert(e); }
      },
      async sendPreviews() {
        try {
          this.status = 'Loading...';
          this.contents = null;
          this.contactType = null;
          this.status = 'Sending emails...';
          let res = await axios.post('{{ lib.client.url.getShortUrl('ADMIN_CONTACT_PREVIEW_BULK_SEND') }}', this.data);
          this.status = res.data;
        } catch (e) { alert(e); }
      }
    },
    mounted() {
      if (this.contents) {
        Object.keys(this.contents).forEach(k => { this.updateIframe(k); });
      }
    }
  });
</script>
{% endblock %}

{% block css %}
  <style type="text/css">
    .block {
      vertical-align: top;
    }
    .card {
      padding: 1.5rem;
      font-size: 1em;
      border: none;
      border-radius: .3rem;
      background-color: white;
      color: black;
      overflow: hidden;
    }
    .email-block {
      margin-top: 3rem;
      display: inline-block;
      padding: 0;
    }
    iframe {
      border: none;
    }
    .switch-button {
      vertical-align: top;
    }
    .label-title {
      text-align: right;
      vertical-align: middle;
      padding: 4px;
    }
    .contents {
      margin-top: 40px;
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      box-sizing: border-box;
    }
    .content {
      margin-bottom: 15px;
      padding-right: 30px;
      width: 700px;
    }
    .subject {
      font-weight: bold;
    }
    .contactKey {
      text-align: left;
      color: #ff8b8b;
    }
  </style>
{% endblock %}
