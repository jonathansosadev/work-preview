{% extends "../common/layouts/darkbo.nunjucks" %}
{% block page %} {% raw %}
<div id="page">
  <h3 class="text-center">Prévisualisation des Emails et SMS</h3><br>
  <h4 style="text-align: center;">Attention: Le sélécteur de langue ne fonctionne pas pour les emails de campagne. Pour ça, il faut aller sur la prévisualisation des contacts de campagne par paquet.</h4>
  <div class="container">
    <div class="block card">
      <div class="row">
        <div class="form-group col-xs-4">
          <label class="col-xs-3 label-title">Type</label>
          <div class="col-xs-9">
            <select class="form-control" v-model="data.contactType">
                <option value="Campaign">Campagne</option>
                <option value="Alert">Alerte</option>
                <option value="Notification">Notification</option>
            </select>
          </div>
        </div>
        <div class="form-group col-xs-4">
          <label class="col-xs-3 label-title">Langue de l'email</label>
          <div class="col-xs-9">
            <select class="form-control" v-model="data.locale">
              <option value="fr_FR">Français</option>
              <option value="en_US">English</option>
              <option value="es_ES">Castellano</option>
              <option value="ca_ES">Catalá</option>
              <option value="nl_BE">Nederlands (België)</option>
            </select>
          </div>
        </div>
        <div class="form-group col-xs-4">
          <label class="col-xs-3 label-title">Type de garage</label>
          <div class="col-xs-9">
            <select class="form-control" v-model="data.garageType">
              <option v-for="garageType in GarageTypes" :value="garageType.value">{{ garageType.name }}</option>
            </select>
          </div>
        </div>
      </div>
      <hr style="margin: 0 0 10px 0">
      <div class="row">
        <label class="col-xs-2 label-title">Nom</label>
        <div class="col-xs-8">
          <select class="form-control" v-if="data.contactType === 'Campaign'" v-model="data.contactId">
            <option v-for="contactConfig in contactsConfigs" :value="contactConfig.key">{{contactConfig.name}}</option>
          </select>
          <select class="form-control" v-if="data.contactType === 'Alert'" v-model="data.alertType">
            <option v-for="alertType in alertTypes" :value="alertType">{{alertType}}</option>
          </select>
          <select class="form-control" v-if="data.contactType === 'Notification'" v-model="data.notificationType">
            <option v-for="notificationType in notificationsTypes" :value="notificationType">{{notificationType}}</option>
          </select>
        </div>
      </div>
      <div class="row col-xs-12">
        <button class="btn btn-success pull-right" @click="generatePreview">Prévisualiser</button>
      </div>
    </div>
    <div class="text-center" v-show="subject || content">
      <div class="email-block card">
        <div v-if="subject">
          <b><span> {{ subject }} </span></b>
          <button @click="html = !html" class="btn btn-xs switch-button pull-right"><i class="fa" :class="html ? 'fa-font' : 'fa-code'"></i></button>
        </div>
        <hr style="margin: 0">
        <iframe id="content"></iframe>
      </div>
    </div>
  </div>
</div>
{% endraw %}{% endblock %}
{% block scripts %}
  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  <script>
  let contactsConfigs = {{ contactsConfigs|safe }};
  let alertTypes = {{ alertTypes|safe }};
  let notificationsTypes = {{ notificationTypes|safe }};
  let GarageTypes = {{ GarageTypes|safe }};

  new Vue({
    el: '#page',
    data() {
      return {
        rendering: false,
        contactsConfigs: contactsConfigs.toArray,
        notificationsTypes: notificationsTypes,
        alertTypes: alertTypes,
        GarageTypes: GarageTypes,
        subject: '',
        content: '',
        textBody: '',
        htmlBody: '',
        html: true,
        data: {
          contactType: 'Campaign',
          locale: 'fr_FR',
          contactId: contactsConfigs && contactsConfigs.toArray ? contactsConfigs.toArray[0].key : null,
          alertType: alertTypes ? alertTypes[0] : null,
          notificationType: notificationsTypes ? notificationsTypes[0] : null,
          garageId: '577a30d774616c1a0056c263',
          garageType: GarageTypes ? GarageTypes[Object.keys(GarageTypes)[0]].value : null
          // vehicleMake: 'Acme',
          {#email: '{{ defaultEmail|safe }}'#}
        }
      };
    },
    watch: {
      html(enable) {
        this.content = enable ? this.htmlBody : this.textBody.replace(/\n/g, "<br />");
        this.updateIFrame(this.content);
      },
      'data.contactId'(value) {
        this.generatePreview();
      },
      'data.alertType'(value) {
        this.generatePreview();
      },
      'data.notificationType'(value) {
        this.generatePreview();
      }
    },
    mounted() {
    },
    methods: {
      updateIFrame(content) {
        let elem = document.getElementById("content");
        let doc = elem.contentWindow.document;
        doc.open(); doc.write(content); doc.close();
        elem.style.width = '650px';
        elem.style.height = '0px';
        setTimeout(function(){
          elem.style.height = doc.body.scrollHeight + 'px';
        }, 50);
      },
      async generatePreview() {
        this.html = true;
        try {
          let res = await axios.post('{{ lib.client.url.getShortUrl('ADMIN_CONTACT_PREVIEW_CONTENT') }}', this.data);
          this.rendering = true;
          this.content = res.data.htmlBody || res.data.body;
          this.htmlBody = this.content;
          this.textBody = res.data.textBody;
          this.updateIFrame(this.content);
          this.subject = res.data.subject;
        } catch (e) { alert(e); }
      }
    }
  });
</script>
{% endblock %}

{% block css %}
  <style type="text/css">
    .block {
      vertical-align: top;
    }
    .card {
      padding: 1.5rem;
      font-size: 1em;
      border: none;
      border-radius: .3rem;
      background-color: white;
      color: black;
      overflow: hidden;
    }
    .email-block {
      margin-top: 3rem;
      display: inline-block;
      width: 650px;
      padding: 0;
    }
    iframe {
      border: none;
    }
    .switch-button {
      vertical-align: top;
    }
    .label-title {
      text-align: right;
      vertical-align: middle;
      padding: 4px;
    }
  </style>
{% endblock %}
